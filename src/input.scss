// match library
@use 'sass:math';

// partials
@import "varibles";



h1 {
  color : $mycolor
}

p{
  $mycolor : rgb(28, 133, 182);  
  color: $mycolor
}

// nested in sass
nav {
  ul {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  li {
    display: inline;

  }
  a{
    display: block;
    text-decoration: none;

  }
}



// select
.btn {


  // use math
  border-radius: math.div(20, 4); 
  border-radius: math.div($border, 2); 


  border-top: math.floor(5.7px);
  height: math.max(2px, 10px, 30px);

  width:  math.min(200px , 300px, 500px);

  &:hover {
    background-color: aquamarine;
  }
}

.texthover{
  width: 100px;
  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;

  &copy{
    opacity: .3;;
    font-size: medium;
  }
}



@debug math.floor(2.8);
@debug math.div(10, 2);


// map function
// get
@debug map-get($colors , "red" );
@debug map-get($colors,  "green" );
// key has
@debug map-has-key($colors, "black" );
@debug map-has-key($colors, "blue" );

// remove key
@debug map-remove($colors, "black" );


//merge
@debug map-merge($colors , ("pink": #ffc0cb));

// keys
@debug map-keys($colors);

// values
@debug map-values($colors);

// compile
body{
  background-color:  map-get($colors, "black");
}


// syntax loop each
// @each $var in list {}

@each $key,$value in $colors{

  .text-#{$key}{
    color: $value
  }    
  .bg-#{$key}{
    background-color: $value;
  }

  @for $i from 1 to 9 {
    .text-#{$key}-light-#{$i}{
      color: mix(white, $value, $i * 10)
    }
  }

  @for $i from 1 to 9 {
    .text-#{$key}-dark-#{$i}{
      @if($key != 'black'){
        color: mix(black, $value, $i * 10)
      }
      
    }
  }

  @for $i from 1 to 9 {
    .bg-#{$key}-light-#{$i}{
      background-color: mix(white, $value, $i * 10);
    }
  }


}


// syntax loop for
// @for $var from start to end {}


//syntax if & else 
@if (2 > 1){
  .text-if{
    color: blue
  }
}
@else {
  .text-if-else{
    color: white
  }

}


// syntax mixin
// mixin name

@mixin btn {
  background-color: #ffc0cb;
  color: black;
  font-size: medium;
  font-family:  'Courier New', Courier, monospace;
}

.btn-info {
  @include btn;
}

.btn-alert {
  @include btn;
}

// mixin  name($varible)

@mixin scopetch($color : gray){
  background-color: $color;
  color: blue;
  font-size: large;
}

.text-scopetch{
  @include scopetch;
}

.text-alert {
   @include scopetch($color: red);
}